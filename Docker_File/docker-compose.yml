version: '3.2'

services: 
    zookeeper:
        image: confluentinc/cp-zookeeper:6.1.0
        hostname: zookeeper
        container_name: zookeeper
        ports:
          - "2181:2181"
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
    
    broker:
        image: confluentinc/cp-kafka:6.1.0
        hostname: broker
        container_name: broker
        depends_on:
          - zookeeper
        ports:
          - "29092:29092"
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
          KAFKA_TOOLS_LOG4J_LOGLEVEL: ERROR
    
    schema-registry:
        image: confluentinc/cp-schema-registry:6.0.0
        hostname: schema-registry
        container_name: schema-registry
        depends_on:
          - broker
        ports:
          - "8081:8081"
        environment:
          SCHEMA_REGISTRY_HOST_NAME: schema-registry
          SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:9092'
          SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: WARN

    elasticsearch:
        container_name: elasticsearch
        image: elasticsearch:7.9.2
        ports:
        - '9200:9200'
        environment:
        - discovery.type=single-node
     
            
    kibana:
        container_name: kibana
        image: kibana:7.9.2
        ports:
        - '5601:5601'
        
        depends_on:
            - elasticsearch 
            
    logstash: 
        image: docker.elastic.co/logstash/logstash:7.13.3
        container_name: logstash
        volumes:
            - type: bind
              source: ./config/logstash.yml
              target: /usr/share/logstash/config/logstash.yml
              read_only: true
            - type: bind
              source: ./pipeline
              target: /usr/share/logstash/pipeline
              read_only: true
        # ports:
        #     - "5044:5044"
        #     - "5000:5000/tcp"
        #     - "5000:5000/udp"
        #     - "9600:9600"
        environment:
            LS_JAVA_OPTS: "-Xmx256m -Xms256m"
       
        depends_on:
            - elasticsearch
        network_mode: host
